{"ast":null,"code":"var _jsxFileName = \"D:\\\\career\\\\fullStackOpen\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const api_key = process.env.REACT_APP_API_KEY;\n  const [weather, setWeather] = useState([]);\n  useEffect(() => {\n    axios.get('https://studies.cs.helsinki.fi/restcountries/api/all').then(response => setCountries(response.data));\n  }, []);\n  const fetchWeatherData = capital => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`).then(response => setWeather(response.data.current));\n  };\n  useEffect(() => {\n    fetchWeatherData(selectedCountry && selectedCountry.capital);\n  }, [selectedCountry]);\n  const handleSearch = e => {\n    setSearch(e.target.value);\n    setFilter(e.target.value !== '');\n  };\n  const toggleInfo = country => {\n    setSelectedCountry(country);\n    fetchWeatherData(country.capital);\n  };\n  console.log('weather', weather.temperature);\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n  const showCountryInfo = country => {\n    const languages = country.languages;\n    const flags = country.flags;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(languages).map(_ref => {\n          let [key, value] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: flags.png,\n          alt: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Weather:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weather.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", weather.weather_descriptions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  };\n  const countriesList = () => {\n    if (filter) {\n      if (filteredList.length >= 10) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Too many matches, specify another filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this);\n      } else if (filteredList.length === 1) {\n        return showCountryInfo(filteredList[0]);\n      }\n      return filteredList.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [country.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleInfo(country),\n              children: \"show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, country.name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this));\n    }\n    return countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      children: \"Find countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      name: \"search\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countriesList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), selectedCountry && showCountryInfo(selectedCountry)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"0JfJy/+KB6F+U4FiMSlqByc1lGQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","countries","setCountries","search","setSearch","filter","setFilter","selectedCountry","setSelectedCountry","api_key","process","env","REACT_APP_API_KEY","weather","setWeather","get","then","response","data","fetchWeatherData","capital","current","handleSearch","e","target","value","toggleInfo","country","console","log","temperature","filteredList","name","common","includes","showCountryInfo","languages","flags","children","fileName","_jsxFileName","lineNumber","columnNumber","area","Object","entries","map","_ref","key","src","png","alt","weather_descriptions","countriesList","length","onClick","className","htmlFor","id","type","onChange","_c","$RefreshReg$"],"sources":["D:/career/fullStackOpen/part2/countries/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  const api_key = process.env.REACT_APP_API_KEY;\n\n  const [weather, setWeather] = useState([]);\n\n\n  useEffect(() => {\n    axios\n      .get('https://studies.cs.helsinki.fi/restcountries/api/all')\n      .then(response=>setCountries(response.data))\n  }, []);\n\nconst fetchWeatherData = (capital) => {\n  axios\n    .get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`)\n    .then(response =>setWeather(response.data.current))\n};\n\nuseEffect(() => {\n  fetchWeatherData(selectedCountry && selectedCountry.capital);\n}, [selectedCountry]);\n\nconst handleSearch = (e) => {\n  setSearch(e.target.value);\n  setFilter(e.target.value !== '');\n}\n\nconst toggleInfo = (country) => {\n  setSelectedCountry(country);\n  fetchWeatherData(country.capital);\n\n}\n\nconsole.log('weather', weather.temperature)\n\n\nconst filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n\nconst showCountryInfo = (country) => {\n\n  const languages = country.languages;\n  const flags = country.flags;\n\n  return (\n    <div>\n      <h1>{country.name.common}</h1>\n      <p>capital {country.capital}</p>\n      <p>capital {country.area}</p>\n      <h2>Languages:</h2>\n      <ul>\n        {Object.entries(languages).map(([key, value]) =>\n          <li key={key}>{value}</li>\n        )}\n      </ul>\n      <br />\n      <div>\n        <img src={flags.png} alt={country.name.common} />\n      </div>\n\n      <div>\n  {weather && (\n    <div>\n      <h2>Weather:</h2>\n      <p>Temperature: {weather.temperature}°C</p>\n      <p>Description: {weather.weather_descriptions}</p>\n    </div>\n  )}\n</div>\n\n\n    </div>\n  )\n}\n\nconst countriesList = () => {\n  if (filter) {\n\n    if (filteredList.length >= 10) {\n      return (<div>Too many matches, specify another filter</div>)\n    }\n\n    else if (filteredList.length === 1) {\n\n      return showCountryInfo(filteredList[0]);\n\n    }\n    return (\n      filteredList.map(country => (\n        <div>\n          <div key={country.name.common}>\n            <li>\n              {country.name.common}\n              <button onClick={() => toggleInfo(country)}>show</button>\n            </li>\n          </div>\n          {/* {selectedCountry && showCountryInfo(selectedCountry)} */}\n        </div>\n      )))\n  }\n\n  return (countries.map(country =>\n    <li>{country.name.common}</li>)\n  )\n\n}\n\n\nreturn (\n  <div className=\"App\">\n    <label htmlFor=\"search\">Find countries</label>\n    <input id=\"search\" type=\"text\" name=\"search\" value={search} onChange={handleSearch}></input>\n    <ul>\n      {countriesList()}\n    </ul>\n    {selectedCountry && showCountryInfo(selectedCountry)}\n  </div>\n);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}