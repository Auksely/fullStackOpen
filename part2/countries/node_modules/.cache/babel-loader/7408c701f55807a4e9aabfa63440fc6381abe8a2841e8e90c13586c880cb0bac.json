{"ast":null,"code":"var _jsxFileName = \"D:\\\\career\\\\fullStackOpen\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  /////////\n  const [weather, setWeather] = useState([]);\n  /////////////\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      try {\n        const response = await fetch('https://studies.cs.helsinki.fi/restcountries/api/all');\n        const data = await response.json();\n        setCountries(data);\n        ////////\n        data.forEach(country => {\n          fetchWeatherData(country.capital);\n        });\n        ///////\n      } catch (error) {\n        console.error('Error fetching address data:', error);\n      }\n    };\n    fetchCountriesData();\n  }, []);\n\n  ////////////////\n  const fetchWeatherData = async capital => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${capital}&appid=YOUR_API_KEY`);\n      const data = await response.json();\n      setWeather(data);\n    } catch (error) {\n      console.error('Error fetching address data:', error);\n    }\n  };\n  //////////////\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n    setFilter(e.target.value !== '');\n  };\n\n  // const toggleInfo = (country) => {\n  //   setSelectedCountry(country);\n  // }\n\n  ///////////////\n  const toggleInfo = async country => {\n    await fetchWeatherData(country.capital);\n    showCountryInfo(country);\n  };\n  //////////////\n\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n  const showCountryInfo = country => {\n    const languages = country.languages;\n    const flags = country.flags;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(languages).map(_ref => {\n          let [key, value] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: flags.png,\n          alt: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Weather:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weather.lat, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", weather.weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  const countriesList = () => {\n    if (filter) {\n      if (filteredList.length >= 10) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Too many matches, specify another filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this);\n      } else if (filteredList.length === 1) {\n        return showCountryInfo(filteredList[0]);\n      }\n      return filteredList.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [country.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleInfo(country),\n              children: \"show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, country.name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this));\n    }\n    return countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      children: \"Find countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      name: \"search\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countriesList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), selectedCountry && showCountryInfo(selectedCountry)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W/cvb4ZCv4EFOPmExcErauP3w0A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","countries","setCountries","search","setSearch","filter","setFilter","selectedCountry","setSelectedCountry","weather","setWeather","fetchCountriesData","response","fetch","data","json","forEach","country","fetchWeatherData","capital","error","console","handleSearch","e","target","value","toggleInfo","showCountryInfo","filteredList","name","common","includes","languages","flags","children","fileName","_jsxFileName","lineNumber","columnNumber","area","Object","entries","map","_ref","key","src","png","alt","lat","countriesList","length","onClick","className","htmlFor","id","type","onChange","_c","$RefreshReg$"],"sources":["D:/career/fullStackOpen/part2/countries/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  /////////\n  const [weather, setWeather] = useState([]);\n  /////////////\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      try {\n        const response = await fetch('https://studies.cs.helsinki.fi/restcountries/api/all');\n        const data = await response.json();\n        setCountries(data);\n        ////////\n        data.forEach((country) => {\n          fetchWeatherData(country.capital);\n        });\n        ///////\n      } catch (error) {\n        console.error('Error fetching address data:', error);\n      }\n    };\n\n    fetchCountriesData();\n  }, []);\n\n  ////////////////\n  const fetchWeatherData = async (capital) => {\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${capital}&appid=YOUR_API_KEY`);\n      const data = await response.json();\n      setWeather(data);\n    } catch (error) {\n      console.error('Error fetching address data:', error);\n    }\n  };\n  //////////////\n\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    setFilter(e.target.value !== '');\n  }\n\n  // const toggleInfo = (country) => {\n  //   setSelectedCountry(country);\n  // }\n\n  ///////////////\n  const toggleInfo = async (country) => {\n    await fetchWeatherData(country.capital);\n    showCountryInfo(country);\n  };\n  //////////////\n\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n\n  const showCountryInfo = (country) => {\n\n    const languages = country.languages;\n    const flags = country.flags;\n\n    return (\n      <div>\n        <h1>{country.name.common}</h1>\n        <p>capital {country.capital}</p>\n        <p>capital {country.area}</p>\n        <h2>Languages:</h2>\n        <ul>\n          {Object.entries(languages).map(([key, value]) =>\n            <li key={key}>{value}</li>\n          )}\n        </ul>\n        <br />\n        <div>\n          <img src={flags.png} alt={country.name.common} />\n        </div>\n\n        <div>\n          {weather && (\n            <div>\n              <h2>Weather:</h2>\n              <p>Temperature: {weather.lat}°C</p>\n              <p>Description: {weather.weather}</p>\n            </div>\n          )}\n        </div>\n\n      </div>\n    )\n  }\n\n  const countriesList = () => {\n    if (filter) {\n\n      if (filteredList.length >= 10) {\n        return (<div>Too many matches, specify another filter</div>)\n      }\n\n      else if (filteredList.length === 1) {\n\n        return showCountryInfo(filteredList[0]);\n\n      }\n      return (\n        filteredList.map(country => (\n          <div>\n          <div key={country.name.common}>\n            <li>\n              {country.name.common}\n              <button onClick={() => toggleInfo(country)}>show</button>\n            </li>\n          </div>\n                {/* {selectedCountry && showCountryInfo(selectedCountry)} */}\n</div>\n        )))\n    }\n\n    return (countries.map(country =>\n      <li>{country.name.common}</li>)\n    )\n\n  }\n\n\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"search\">Find countries</label>\n      <input id=\"search\" type=\"text\" name=\"search\" value={search} onChange={handleSearch}></input>\n      <ul>\n        {countriesList()}\n      </ul>\n      {selectedCountry && showCountryInfo(selectedCountry)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}