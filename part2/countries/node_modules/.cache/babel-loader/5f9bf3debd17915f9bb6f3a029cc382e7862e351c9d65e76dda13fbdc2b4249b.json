{"ast":null,"code":"var _jsxFileName = \"D:\\\\career\\\\fullStackOpen\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  // const [tooLong, setTooLong]=useState('')\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      try {\n        const response = await fetch('https://studies.cs.helsinki.fi/restcountries/api/all');\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching address data:', error);\n      }\n    };\n    fetchCountriesData();\n  }, []);\n  const handleSearch = e => {\n    if (filteredList === search) {\n      setSearch(e.target.value);\n      setFilter(true);\n    }\n    console.log('e.target.value', e.target.value);\n  };\n\n  // const filteredList = search\n  // ? countries.filter((country) =>\n  //     country.name.common && country.name.common.includes(search)\n  //   )\n  // : countries;\n\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n  const listToShow = () => {\n    if (filter) {\n      if (filteredList.length >= 10) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Too many matches, specify another filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this);\n      } else if (filteredList.length === 1) {\n        const country = filteredList[0];\n        const languages = country.languages;\n        console.log('languages', languages);\n        console.log('languages', languages);\n        console.log('country', country);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: country.name.common\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"capital \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"capital \", country.area]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Languages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(languages).map(_ref => {\n              let [key, value] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      }\n      return filteredList.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 43\n      }, this));\n    }\n    return countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      children: \"Find countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      name: \"search\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listToShow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MlVU/0bF44oXnp6WqUZGLeM+hps=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","countries","setCountries","search","setSearch","filter","setFilter","fetchCountriesData","response","fetch","data","json","error","console","handleSearch","e","filteredList","target","value","log","country","name","common","includes","listToShow","length","children","fileName","_jsxFileName","lineNumber","columnNumber","languages","capital","area","Object","entries","map","_ref","key","className","htmlFor","id","type","onChange","_c","$RefreshReg$"],"sources":["D:/career/fullStackOpen/part2/countries/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  // const [tooLong, setTooLong]=useState('')\n\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      try {\n        const response = await fetch('https://studies.cs.helsinki.fi/restcountries/api/all');\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching address data:', error);\n      }\n    };\n\n    fetchCountriesData();\n  }, []);\n\n\n  const handleSearch = (e) => {\n    if (filteredList===search){\n    setSearch(e.target.value);\n    setFilter(true);\n    }\n    console.log('e.target.value', e.target.value)\n\n  }\n\n  // const filteredList = search\n  // ? countries.filter((country) =>\n  //     country.name.common && country.name.common.includes(search)\n  //   )\n  // : countries;\n\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n\n  const listToShow = () => {\n    if (filter) {\n      if (filteredList.length >= 10) {\n        return (<div>Too many matches, specify another filter</div>)\n      }\n      else if (filteredList.length === 1) {\n        const country = filteredList[0];\n        const languages = country.languages;\n        console.log('languages', languages)\n\n        console.log('languages', languages)\n        console.log('country', country)\n        return (\n          <div>\n            <h1>{country.name.common}</h1>\n            <p>capital {country.capital}</p>\n            <p>capital {country.area}</p>\n            <h2>Languages:</h2>\n            <ul>\n              {Object.entries(languages).map(([key, value]) =>\n                <li key={key}>{value}</li>\n              )}\n            </ul>\n          </div>\n        )\n      }\n      return (filteredList.map(country => <li>{country.name.common}</li>))\n    }\n    return (countries.map(country =>\n      <li>{country.name.common}</li>)\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"search\">Find countries</label>\n      <input id=\"search\" type=\"text\" name=\"search\" value={search} onChange={handleSearch}></input>\n      <ul>\n        {listToShow()}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}