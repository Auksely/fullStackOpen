{"ast":null,"code":"var _jsxFileName = \"D:\\\\career\\\\fullStackOpen\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  /////////\n\n  const api_key = process.env.REACT_APP_API_KEY;\n  const [weather, setWeather] = useState([]);\n\n  /////////////\n\n  useEffect(() => {\n    axios.get('https://studies.cs.helsinki.fi/restcountries/api/all').then(response => setCountries(response.data));\n  }, []);\n\n  ////////////////\n  const fetchWeatherData = async capital => {\n    try {\n      const response = await fetch(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`);\n      const data = await response.json();\n      setWeather(data);\n    } catch (error) {\n      console.error('Error fetching address data:', error);\n    }\n  };\n  //////////////\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n    setFilter(e.target.value !== '');\n  };\n  const toggleInfo = country => {\n    setSelectedCountry(country);\n  };\n  console.log('weather', weather);\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n  const showCountryInfo = country => {\n    const languages = country.languages;\n    const flags = country.flags;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(languages).map(_ref => {\n          let [key, value] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: flags.png,\n          alt: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Weather:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weather.lat, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", weather.weather]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n  };\n  const countriesList = () => {\n    if (filter) {\n      if (filteredList.length >= 10) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Too many matches, specify another filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this);\n      } else if (filteredList.length === 1) {\n        return showCountryInfo(filteredList[0]);\n      }\n      return filteredList.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [country.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleInfo(country),\n              children: \"show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, country.name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this));\n    }\n    return countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      children: \"Find countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      name: \"search\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countriesList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), selectedCountry && showCountryInfo(selectedCountry)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"W/cvb4ZCv4EFOPmExcErauP3w0A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","countries","setCountries","search","setSearch","filter","setFilter","selectedCountry","setSelectedCountry","api_key","process","env","REACT_APP_API_KEY","weather","setWeather","get","then","response","data","fetchWeatherData","capital","fetch","json","error","console","handleSearch","e","target","value","toggleInfo","country","log","filteredList","name","common","includes","showCountryInfo","languages","flags","children","fileName","_jsxFileName","lineNumber","columnNumber","area","Object","entries","map","_ref","key","src","png","alt","lat","countriesList","length","onClick","className","htmlFor","id","type","onChange","_c","$RefreshReg$"],"sources":["D:/career/fullStackOpen/part2/countries/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  \n  /////////\n\n  const api_key = process.env.REACT_APP_API_KEY;\n\n  const [weather, setWeather] = useState([]);\n\n  /////////////\n\n  useEffect(() => {\n    axios\n      .get('https://studies.cs.helsinki.fi/restcountries/api/all')\n      .then(response=>setCountries(response.data))\n  }, []);\n\n////////////////\nconst fetchWeatherData = async (capital) => {\n  try {\n    const response = await fetch(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`);\n    const data = await response.json();\n    setWeather(data);\n  } catch (error) {\n    console.error('Error fetching address data:', error);\n  }\n};\n//////////////\n\n\nconst handleSearch = (e) => {\n  setSearch(e.target.value);\n  setFilter(e.target.value !== '');\n}\n\nconst toggleInfo = (country) => {\n  setSelectedCountry(country);\n}\n\nconsole.log('weather', weather)\n\n\nconst filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n\nconst showCountryInfo = (country) => {\n\n  const languages = country.languages;\n  const flags = country.flags;\n\n  return (\n    <div>\n      <h1>{country.name.common}</h1>\n      <p>capital {country.capital}</p>\n      <p>capital {country.area}</p>\n      <h2>Languages:</h2>\n      <ul>\n        {Object.entries(languages).map(([key, value]) =>\n          <li key={key}>{value}</li>\n        )}\n      </ul>\n      <br />\n      <div>\n        <img src={flags.png} alt={country.name.common} />\n      </div>\n\n      <div>\n        {weather && (\n          <div>\n            <h2>Weather:</h2>\n            <p>Temperature: {weather.lat}°C</p>\n            <p>Description: {weather.weather}</p>\n          </div>\n        )}\n      </div>\n\n    </div>\n  )\n}\n\nconst countriesList = () => {\n  if (filter) {\n\n    if (filteredList.length >= 10) {\n      return (<div>Too many matches, specify another filter</div>)\n    }\n\n    else if (filteredList.length === 1) {\n\n      return showCountryInfo(filteredList[0]);\n\n    }\n    return (\n      filteredList.map(country => (\n        <div>\n          <div key={country.name.common}>\n            <li>\n              {country.name.common}\n              <button onClick={() => toggleInfo(country)}>show</button>\n            </li>\n          </div>\n          {/* {selectedCountry && showCountryInfo(selectedCountry)} */}\n        </div>\n      )))\n  }\n\n  return (countries.map(country =>\n    <li>{country.name.common}</li>)\n  )\n\n}\n\n\nreturn (\n  <div className=\"App\">\n    <label htmlFor=\"search\">Find countries</label>\n    <input id=\"search\" type=\"text\" name=\"search\" value={search} onChange={handleSearch}></input>\n    <ul>\n      {countriesList()}\n    </ul>\n    {selectedCountry && showCountryInfo(selectedCountry)}\n  </div>\n);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}