{"ast":null,"code":"var _jsxFileName = \"D:\\\\career\\\\fullStackOpen\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  // const [tooLong, setTooLong]=useState('')\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      try {\n        const response = await fetch('https://studies.cs.helsinki.fi/restcountries/api/all');\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching address data:', error);\n      }\n    };\n    fetchCountriesData();\n  }, []);\n  const handleSearch = e => {\n    setSearch(e.target.value);\n    setFilter(true);\n  };\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n  console.log('filteredList length', filteredList.length);\n  const message = () => {\n    if (filter) {\n      if (filteredList.length >= 10) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Too many matches, specify another filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      } else if (filteredList.length === 1) {\n        return filteredList.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this));\n      }\n      return filteredList.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: country.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 47\n      }, this));\n    }\n    return countries.map(country => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search\",\n      children: \"Find countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      type: \"text\",\n      name: \"search\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: message()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MlVU/0bF44oXnp6WqUZGLeM+hps=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","countries","setCountries","search","setSearch","filter","setFilter","fetchCountriesData","response","fetch","data","json","error","console","handleSearch","e","target","value","filteredList","country","name","common","includes","log","length","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","htmlFor","id","type","onChange","_c","$RefreshReg$"],"sources":["D:/career/fullStackOpen/part2/countries/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState(false);\n  // const [tooLong, setTooLong]=useState('')\n\n\n  useEffect(() => {\n    const fetchCountriesData = async () => {\n      try {\n        const response = await fetch('https://studies.cs.helsinki.fi/restcountries/api/all');\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching address data:', error);\n      }\n    };\n\n    fetchCountriesData();\n  }, []);\n\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    setFilter(true);\n  }\n\n  const filteredList = countries.filter(country => country.name.common && country.name.common.includes(search));\n  console.log('filteredList length', filteredList.length)\n\n  const message = () => {\n    if (filter) {\n      if ( filteredList.length >= 10 ) {\n          return ( <li>Too many matches, specify another filter</li> )\n      }\n      else if ( filteredList.length === 1 ){\n        return (filteredList.map(country => \n        <div>{country.name.common}</div>\n        )\n        )\n      }\n          return (filteredList.map(country => <li>{country.name.common}</li>))     \n    }\n    return (countries.map(country =>\n      <li>{country.name.common}</li>)\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <label htmlFor=\"search\">Find countries</label>\n      <input id=\"search\" type=\"text\" name=\"search\" value={search} onChange={handleSearch}></input>\n      <ul>\n        {message()}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}